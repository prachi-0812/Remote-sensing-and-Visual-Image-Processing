var modis = ee.ImageCollection("MODIS/MOD09A1");
var gaul = ee.FeatureCollection("FAO/GAUL/2015/level1");
var gfsad = ee.Image("USGS/GFSAD1000_V0");

Map.setCenter= (77.23149,28.65195, 11);
var wheatrice = gfsad.select('landcover').eq(1);
var delhi = gaul.filter(ee.Filter.eq('ADM1_NAME', 'Delhi'));
var points = wheatrice.selfMask().stratifiedSample({numPoints:4, region:delhi, geometries: true} );
var points = points.map(function(feature) {
  return ee.Feature(feature.geometry(), {'id': feature.id()});
});
var outline = ee.Image().byte().paint({
  featureCollection: delhi,
  color: 1,
  width: 3
});
Map.addLayer(outline, {palette: ['blue']}, 'AOI');
Map.addLayer(points, {color: 'green'}, 'Glacier Locations');
var startDate = '2016-01-01';
var endDate = '2016-12-31';
var modisBands = ['sur_refl_b03','sur_refl_b04','sur_refl_b01','sur_refl_b02','sur_refl_b06','sur_refl_b07'];
var lsBands = ['blue','green','red','nir','swir1','swir2'];

function getQABits(image, start, end, newName) 
{
      var pattern = 0;
    for (var i = start; i <= end; i++) {
       pattern += Math.pow(2, i);
    }
       return image.select([0], [newName])
                  .bitwiseAnd(pattern)
                  .rightShift(start);

}

function maskQuality(image) 
{
    var QA = image.select('StateQA');
      var internalQuality = getQABits(QA,8, 13, 'internal_quality_flag');
      return image.updateMask(internalQuality.eq(0));
}

var noCloud = modis.filterDate(startDate,endDate)
                             .map(maskQuality)
                             .select(modisBands,lsBands)
                             .filter(ee.Filter.bounds(points));

var visParams = {bands:['swir1','nir','green'],min:0,max:3000,gamma:1.3};

Map.addLayer(noCloud.median(),visParams,'MODIS Composite');

function addNDBI(noCloud) {
  var ndbi = noCloud.normalizedDifference(['sur_refl_b06', 'sur_refl_b02']).rename('ndbi');
  return noCloud.addBands([ndbi]);
 }

var collection = modis.filterDate(startDate, endDate)
    .map(addNDBI);

var vizParams = {bands: ['ndbi'], min: -1, max: 1};
Map.addLayer(collection.median(), vizParams, 'collection');

var chart = ui.Chart.image.seriesByRegion({
    imageCollection: collection.select('ndbi'),
    regions: points,
    reducer: ee.Reducer.mean()
});
print(chart);